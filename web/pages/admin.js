import Head from 'next/head'
import { useEffect, useState } from 'react'
import { contractAddress, contractABI } from './../lib/web3';
import { ethers } from 'ethers';

export default function Client() {

  const getContract = async () => {
    const provider = new ethers.providers.Web3Provider(window.ethereum);
    const signer = provider.getSigner();
    const contract = new ethers.Contract(contractAddress, contractABI, signer);
    return contract;
  }

  const adminAddress = "0x8bf0e6b2b2fe7c9467e9c6cc3c218f2cdf456759";

  const [accounts, setAccounts] = useState([]);
  const [title, setTitle] = useState("");
  const [nowStatus, setNowStatus] = useState(0)
  const [reward, setReward] = useState(0);
  const [hitNumber, setHitNumber] = useState(0);

  const onConnect = async () => {
    let res = await  window.ethereum.request({ method: "eth_requestAccounts" });
    if(res.length != 0) {
        if(res[0].toLowerCase() !== adminAddress.toLowerCase()) {
            alert("请使用管理员钱包登录")
        }else{
            setAccounts(res)
        }
    }
  }

  const onChangeTitle = (e) => {
    setTitle(e.target.value)
  }

  const onChangeReward = (e) => {
    setReward(e.target.value)
  }

  const onChangeHitNumber = (e) => {
    setHitNumber(e.target.value)
  }


  const fetchLotteryStatus = async () => {
    let contract = await getContract();
    contract.getNowStatus.call().then(setNowStatus);
  }

  const fetchLotteryTitle = async () => {
    let contract = await getContract();
    contract.getNowLotteryTitle.call().then(setTitle);
  }

  const fetchLotteryReward = async () => {
    let contract = await getContract();
    contract.getNowLotteryReward.call().then(setReward);
  }

  useEffect(() => {
    fetchLotteryStatus();
    fetchLotteryTitle();
    fetchLotteryReward();
  }, [])


  const saveData = async () => {
    const contract = await getContract();
    try{
        let data = await contract.setLottetryInfo(title, parseInt(hitNumber, 10), parseInt(reward, 10))
        console.log(data)
    }catch(e) {
        alert(e)
    }
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main >
        {
          accounts.length > 0 ? (<div >{accounts[0]}</div>) : (
            <div onClick={onConnect}>connect wallet</div>
          )
        }
        {
            accounts.length > 0 ?(
                <div>
                    <div>
                        <input value={title} onChange={onChangeTitle}></input>标题
                    </div>
                    <div>
                        <input value={reward}  onChange={onChangeReward}></input>将金
                    </div>
                    <div>
                        <input value={hitNumber}  onChange={onChangeHitNumber}></input>幸运数字
                    </div>
                    <div>
                        <button onClick={saveData}>保存</button>
                    </div>
                    <div>
                        {
                            nowStatus !== 0 ? (
                                <button>重新</button>
                            ):''
                        }
                        {
                            nowStatus !== 1 ? (
                                <button>开始</button>
                            ):''
                        }
                        {
                            nowStatus !== 2 ? (
                                <button>开奖</button>
                            ):''
                        }
                        {
                            nowStatus !== 3 ? (
                                <button>结束</button>
                            ):''
                        }
                    </div>
                </div>
            ):''
        }
      </main>
    </div>
  )
}